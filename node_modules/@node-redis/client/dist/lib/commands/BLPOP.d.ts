<<<<<<< HEAD
import { RedisCommandArgument, RedisCommandArguments } from '.';
export declare const FIRST_KEY_INDEX = 1;
export declare function transformArguments(keys: RedisCommandArgument | Array<RedisCommandArgument>, timeout: number): RedisCommandArguments;
declare type BLPopRawReply = null | [RedisCommandArgument, RedisCommandArgument];
declare type BLPopReply = null | {
    key: RedisCommandArgument;
    element: RedisCommandArgument;
};
export declare function transformReply(reply: BLPopRawReply): BLPopReply;
=======
/// <reference types="node" />
import { RedisCommandArguments } from '.';
export declare const FIRST_KEY_INDEX = 1;
export declare function transformArguments(keys: string | Buffer | Array<string | Buffer>, timeout: number): RedisCommandArguments;
declare type BLPOPReply = null | {
    key: string;
    element: string;
};
export declare function transformReply(reply: null | [string, string]): BLPOPReply;
>>>>>>> 5655adf32f80401ccc6f0e1066a0d938e82e3bba
export {};
