<<<<<<< HEAD
import { RedisCommandArgument, RedisCommandArguments } from '.';
=======
>>>>>>> 5655adf32f80401ccc6f0e1066a0d938e82e3bba
export declare const FIRST_KEY_INDEX = 1;
export declare const IS_READ_ONLY = true;
interface XPendingRangeOptions {
    IDLE?: number;
<<<<<<< HEAD
    consumer?: RedisCommandArgument;
}
export declare function transformArguments(key: RedisCommandArgument, group: RedisCommandArgument, start: string, end: string, count: number, options?: XPendingRangeOptions): RedisCommandArguments;
declare type XPendingRangeRawReply = Array<[
    id: number,
    consumer: RedisCommandArgument,
    millisecondsSinceLastDelivery: number,
    deliveriesCounter: number
]>;
declare type XPendingRangeReply = Array<{
    id: number;
    owner: RedisCommandArgument;
    millisecondsSinceLastDelivery: number;
    deliveriesCounter: number;
}>;
export declare function transformReply(reply: XPendingRangeRawReply): XPendingRangeReply;
export {};
=======
    consumer?: string;
}
export declare function transformArguments(key: string, group: string, start: string, end: string, count: number, options?: XPendingRangeOptions): Array<string>;
export { transformReplyStreamMessages as transformReply } from './generic-transformers';
>>>>>>> 5655adf32f80401ccc6f0e1066a0d938e82e3bba
