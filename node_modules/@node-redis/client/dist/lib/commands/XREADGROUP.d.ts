<<<<<<< HEAD
import { RedisCommandArgument, RedisCommandArguments } from '.';
export interface XReadGroupStream {
    key: RedisCommandArgument;
    id: RedisCommandArgument;
=======
export interface XReadGroupStream {
    key: string;
    id: string;
>>>>>>> 5655adf32f80401ccc6f0e1066a0d938e82e3bba
}
export interface XReadGroupOptions {
    COUNT?: number;
    BLOCK?: number;
    NOACK?: true;
}
<<<<<<< HEAD
export declare const FIRST_KEY_INDEX: (_group: RedisCommandArgument, _consumer: RedisCommandArgument, streams: Array<XReadGroupStream> | XReadGroupStream) => RedisCommandArgument;
export declare const IS_READ_ONLY = true;
export declare function transformArguments(group: RedisCommandArgument, consumer: RedisCommandArgument, streams: Array<XReadGroupStream> | XReadGroupStream, options?: XReadGroupOptions): RedisCommandArguments;
export { transformStreamsMessagesReply as transformReply } from './generic-transformers';
=======
export declare const FIRST_KEY_INDEX: (_group: string, _consumer: string, streams: Array<XReadGroupStream> | XReadGroupStream) => string;
export declare const IS_READ_ONLY = true;
export declare function transformArguments(group: string, consumer: string, streams: Array<XReadGroupStream> | XReadGroupStream, options?: XReadGroupOptions): Array<string>;
export { transformReplyStreamsMessages as transformReply } from './generic-transformers';
>>>>>>> 5655adf32f80401ccc6f0e1066a0d938e82e3bba
