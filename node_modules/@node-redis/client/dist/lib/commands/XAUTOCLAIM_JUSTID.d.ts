<<<<<<< HEAD
import { RedisCommandArgument, RedisCommandArguments } from '.';
import { transformArguments as transformXAutoClaimArguments } from './XAUTOCLAIM';
export { FIRST_KEY_INDEX } from './XAUTOCLAIM';
export declare function transformArguments(...args: Parameters<typeof transformXAutoClaimArguments>): RedisCommandArguments;
declare type XAutoClaimJustIdRawReply = [RedisCommandArgument, Array<RedisCommandArgument>];
interface XAutoClaimJustIdReply {
    nextId: RedisCommandArgument;
    messages: Array<RedisCommandArgument>;
}
export declare function transformReply(reply: XAutoClaimJustIdRawReply): XAutoClaimJustIdReply;
=======
import { transformArguments as transformXAutoClaimArguments } from './XAUTOCLAIM';
export { FIRST_KEY_INDEX } from './XAUTOCLAIM';
export declare function transformArguments(...args: Parameters<typeof transformXAutoClaimArguments>): Array<string>;
interface XAutoClaimJustIdReply {
    nextId: string;
    messages: Array<string>;
}
export declare function transformReply(reply: [string, Array<string>]): XAutoClaimJustIdReply;
>>>>>>> 5655adf32f80401ccc6f0e1066a0d938e82e3bba
