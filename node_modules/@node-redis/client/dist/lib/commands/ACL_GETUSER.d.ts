<<<<<<< HEAD
import { RedisCommandArgument, RedisCommandArguments } from '.';
export declare function transformArguments(username: RedisCommandArgument): RedisCommandArguments;
declare type AclGetUserRawReply = [
    _: RedisCommandArgument,
    flags: Array<RedisCommandArgument>,
    _: RedisCommandArgument,
    passwords: Array<RedisCommandArgument>,
    _: RedisCommandArgument,
    commands: RedisCommandArgument,
    _: RedisCommandArgument,
    keys: Array<RedisCommandArgument>,
    _: RedisCommandArgument,
    channels: Array<RedisCommandArgument>
];
interface AclUser {
    flags: Array<RedisCommandArgument>;
    passwords: Array<RedisCommandArgument>;
    commands: RedisCommandArgument;
    keys: Array<RedisCommandArgument>;
    channels: Array<RedisCommandArgument>;
=======
export declare function transformArguments(username: string): Array<string>;
declare type AclGetUserRawReply = [
    _: string,
    flags: Array<string>,
    _: string,
    passwords: Array<string>,
    _: string,
    commands: string,
    _: string,
    keys: Array<string>,
    _: string,
    channels: Array<string>
];
interface AclUser {
    flags: Array<string>;
    passwords: Array<string>;
    commands: string;
    keys: Array<string>;
    channels: Array<string>;
>>>>>>> 5655adf32f80401ccc6f0e1066a0d938e82e3bba
}
export declare function transformReply(reply: AclGetUserRawReply): AclUser;
export {};
